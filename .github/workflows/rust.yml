name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  msrv:
    runs-on: ubuntu-latest

    steps:
      - name: Install Rust (thumbv6m)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: thumbv6m-none-eabi

      - name: Checkout Sources
        uses: actions/checkout@v3

      - name: Cache Cargo Dependencies
        uses: actions/cache@v3.0.3
        with:
          path: |
            - ~/.cargo/bin/
            - ~/.cargo/registry/index/
            - ~/.cargo/registry/cache/
            - ~/.cargo/git/db/
          key: ${{ runner.OS }}-cargo-msrv-${{ hashFiles('**/Cargo.toml') }}

      - name: install cargo-msrv
        run: |
          cargo install cargo-msrv --debug
          find ~/.cargo/bin/

      - name: Verify MSRV
        run: cargo msrv --verify

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install Rust (thumbv6m)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: thumbv6m-none-eabi

      - name: Checkout Sources
        uses: actions/checkout@v3

      - name: Cache Cargo Dependencies
        uses: actions/cache@v3.0.3
        with:
          path: |
            - ~/.cargo/bin/
            - ~/.cargo/registry/index/
            - ~/.cargo/registry/cache/
            - ~/.cargo/git/db/
          key: ${{ runner.OS }}-cargo-build-${{ hashFiles('**/Cargo.toml') }}

      - name: install cargo-all-features
        run: cargo install cargo-all-features --debug

      - name: Cache Build Output Dependencies
        uses: actions/cache@v3.0.3
        with:
          path: target
          key: ${{ runner.OS }}-build-${{ hashFiles('**/Cargo.toml') }}

      - name: Build
        env:
          CARGO_BUILD_TARGET: thumbv6m-none-eabi
          RUSTFLAGS: -D warnings
        run: cargo build-all-features --examples

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Install Rust (thumbv6m)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: thumbv6m-none-eabi
          components: clippy, rustfmt

      - name: Checkout Sources
        uses: actions/checkout@v3

      - name: Cache Cargo Dependencies
        uses: actions/cache@v3.0.3
        with:
          path: |
            - ~/.cargo/bin/
            - ~/.cargo/registry/index/
            - ~/.cargo/registry/cache/
            - ~/.cargo/git/db/
          key: ${{ runner.OS }}-cargo-test-${{ hashFiles('**/Cargo.toml') }}

      - name: Cache Build Output Dependencies
        uses: actions/cache@v3.0.3
        with:
          path: target
          key: ${{ runner.OS }}-test-${{ hashFiles('**/Cargo.toml') }}

      - name: Check Formatting
        run: cargo fmt --check

      - name: Clippy
        env:
          CARGO_BUILD_TARGET: thumbv6m-none-eabi
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: systick-timebase Clippy
          args: --all-features -- -W clippy::pedantic -W clippy::nursery -W clippy::cargo

  qemu-test:
    name: "qemu tests"
    runs-on: ubuntu-latest

    steps:
      - name: Install Rust (thumbv7m)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          target: thumbv7m-none-eabi

      - name: Checkout Sources
        uses: actions/checkout@v3

      - name: Cache Cargo Dependencies
        uses: actions/cache@v3.0.3
        with:
          path: |
            - ~/.cargo/bin/
            - ~/.cargo/registry/index/
            - ~/.cargo/registry/cache/
            - ~/.cargo/git/db/
          key: ${{ runner.OS }}-cargo-qemu-${{ hashFiles('**/Cargo.toml') }}

      - name: Cache Build Output Dependencies
        uses: actions/cache@v3.0.3
        with:
          path: target
          key: ${{ runner.OS }}-qemu-${{ hashFiles('**/Cargo.toml') }}

      - name: Install Qemu
        run: |
          sudo apt-get clean && sudo apt-get update
          sudo apt-get install qemu-system-arm qemu

      - name: Run Qemu Tests
        run: python3 run-qemu-tests.py
